{"version":3,"sources":["reversible-logo.svg","wordmark.svg","components/layout/Navigation.js","components/pages/Home.js","components/pages/Calculator.js","components/pages/SourceLibrary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","to","href","target","rel","Home","ReactGA","initialize","pageview","src","logo","alt","id","wordmark","Component","selectStyles","menuList","provided","state","height","isMobile","placeholder","color","Calculator","carbonFootprint","location","locationType","countryValue","zipCodeValue","handleCountryChange","setState","event","category","action","label","handleZipCodeChange","value","this","defaultValue","onChange","options","countryCarbonFootprintsData","styles","aria-label","backspaceRemovesValue","deleteRemoves","searchInput","autoComplete","usHouseholdCarbonFootprintsData","filterOption","createFilter","ignoreAccents","components","DropdownIndicator","IndicatorSeparator","Menu","parseFloat","toFixed","indexOf","State","Number","toLocaleString","SourceLibrary","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8de74733.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reversible-logo.d6b2c88d.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordmark.d1774e60.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation() {\n  return (\n    <header className=\"App-header\">\n      <nav className=\"primary-nav\">\n\n        <li className=\"nav-item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/calculator\">Carbon Calculator</Link>\n        </li>\n        <li className=\"nav-item\">\n          <a href=\"https://github.com/reversiblecc/baseline-proxy\" target=\"_blank\" rel=\"noopener noreferrer\">Baseline Proxy</a>\n        </li>\n\n        <div className=\"nav-right\">\n\n        </div>\n      </nav>\n    </header>\n  )\n}\n\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Navigation from '../layout/Navigation';\nimport { Link } from 'react-router-dom';\n\nimport '../../App.css';\nimport logo from '../../reversible-logo.svg';\nimport wordmark from '../../wordmark.svg';\n\nimport ReactGA from 'react-ga';\n\nclass Home extends Component {\n  render() {\n    ReactGA.initialize('UA-148187805-1');\n    ReactGA.pageview('/');\n    return (\n      <div className=\"Home\">\n\n      <Navigation />\n        <div className=\"main-section\">\n\n          <div className=\"section -paragraph\">\n          <div className=\"logo-section\">\n          <Link to=\"/\"><img src={logo} alt=\"The Reversible logo, a small blue dot\" id=\"logo\" />\n          <img src={wordmark} alt=\"The Reversible wordmark\" id=\"wordmark\" /></Link>\n          </div>\n            <h1>Software for reversing climate change</h1>\n            <p>Reversible is making open source software products to facilitate the removal of carbon dioxide from the atmosphere and reverse climate change.</p>\n          </div>\n\n          <div className=\"section -paragraph\">\n            <h2>Tools</h2>\n              <ul>\n                <li><Link to=\"/calculator\">Carbon Calculator</Link></li>\n                <li><Link to=\"/source-library\">Source Library</Link></li>\n              </ul>\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Select , { createFilter } from 'react-select';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from \"react-device-detect\";\nimport ReactGA from 'react-ga';\n\nimport Navigation from '../layout/Navigation';\nimport '../../App.css';\nimport logo from '../../reversible-logo.svg';\nimport wordmark from '../../wordmark.svg';\n\n\nimport countryCarbonFootprintsData from '../../data/country-carbon-footprints.json';\nimport usHouseholdCarbonFootprintsData from '../../data/us-household-carbon-footprints.json';\n\nconst selectStyles = {\n  menuList: (provided, state) =>  ({\n    ...provided,\n    height: isMobile ? 120 : null,\n  }),\n  placeholder: (provided, state) => ({\n    ...provided,\n    color: \"rgba(61,61,61, 0.55)\",\n  }),\n  // TODO make the zip label the color of the placeholder when input is focused\n  // control: (provided, state) => ({\n  // ...provided,\n  // color: state.isFocused ? \"rgba(61,61,61, 0.55)\" : \"#3d3d3d\",\n  // }),\n}\n\nclass Calculator extends Component {\n  state = {\n    carbonFootprint: \"16.50283724\",\n    location: {\n       \"value\": \"US\",\n       \"label\": \"United States\",\n       \"carbonFootprint\": \"16.50283724\",\n       \"countryCodeThreeDigit\": \"USA\"\n     },\n    locationType: \"\",\n    countryValue:  {\n       \"value\": \"US\",\n       \"label\": \"United States\",\n       \"carbonFootprint\": \"16.50283724\",\n       \"countryCodeThreeDigit\": \"USA\"\n     },\n     zipCodeValue:  null,\n  }\n  // TODO: combine into handleChange()\n  handleCountryChange = countryValue => {\n    this.setState({ carbonFootprint: countryValue.carbonFootprint, location: countryValue, countryValue, locationType: \"country\" });\n    ReactGA.event({\n      category: 'Calculator',\n      action: 'Country changed',\n      label: 'Country: ' + countryValue.label\n    });\n  }\n  handleZipCodeChange = zipCodeValue => {\n    this.setState({ carbonFootprint: zipCodeValue.carbonFootprint/2, location: zipCodeValue, zipCodeValue, locationType: \"zip code\" });\n    ReactGA.event({\n      category: 'Calculator',\n      action: 'Zip changed',\n      label: 'Zip: ' + zipCodeValue.label + zipCodeValue.value\n    });\n  }\n\n  render() {\n    ReactGA.initialize('UA-148187805-1');\n    ReactGA.pageview('/calculator');\n    const { countryValue } = this.state;\n    const { zipCodeValue } = this.state;\n    const { carbonFootprint } = this.state;\n    const { location } = this.state;\n    const { locationType } = this.state;\n\n\n    return (\n      <div className=\"Calculator\">\n\n      <Navigation />\n\n        <div className=\"main-section\">\n        <div className=\"logo-section\">\n          <Link to=\"/\"><img src={logo} alt=\"The Reversible logo, a small blue dot\" id=\"logo\" />\n          <img src={wordmark} alt=\"The Reversible wordmark\" id=\"wordmark\" /></Link>\n        </div>\n        <h1>Carbon Footprint Calculator</h1>\n        <p>Calculate your estimated carbon footprint by choosing where you live.</p>\n        <form className=\"input-group\">\n          <div className=\"input-wrapper\">\n            <span className=\"input-assist\">Choose a country</span>\n            <Select\n              defaultValue= {{\"value\": \"US\", \"label\": \"United States\"}}\n              value={this.state.countryValue}\n              onChange={this.handleCountryChange}\n              options={countryCarbonFootprintsData}\n              styles={selectStyles}\n              aria-label=\"Choose a country\"\n              backspaceRemovesValue={false}\n              deleteRemoves={false}\n              searchInput={{ autoComplete: 'nope' }}\n            />\n          </div>\n\n          {\n            countryValue.value === \"US\" &&\n          <div className=\"input-wrapper\">\n            <span className=\"input-assist\">Type a US zip code and press enter</span>\n            <Select\n              value={this.state.zipCodeValue}\n              onChange={this.handleZipCodeChange}\n              options={usHouseholdCarbonFootprintsData}\n              styles={selectStyles}\n              placeholder=\"Zip Code\"\n              aria-label=\"Enter a zip code\"\n              backspaceRemovesValue={false}\n              deleteRemoves={false}\n              searchInput={{ autoComplete: 'nope' }}\n              filterOption={createFilter({ignoreAccents: false})}\n              components={{\n                  DropdownIndicator: () => null,\n                  IndicatorSeparator: () => null,\n                  Menu: () => null,}}\n            />\n          </div>\n        }\n\n        </form>\n\n        <div className=\"calculator-results\">\n          <h2>Your carbon footprint is <b>{parseFloat(carbonFootprint || countryValue.carbonFootprint).toFixed(2)}</b> tonnes of greenhouse gasses per year.</h2>\n        </div>\n\n        <h3>If you live in {location.label.indexOf('United') > -1 ? \"the \" : \"\"}{location.label}{locationType === \"zip code\" ? \", \" + zipCodeValue.State : \"\"}, you are contributing to climate change by adding about {(countryValue.value === \"US\" || countryValue.value === \"MM\" || countryValue.value === \"LR\") ? (Number((parseFloat(carbonFootprint || countryValue.carbonFootprint) * 2204.6).toFixed()).toLocaleString() + \" pounds\") : (Number((parseFloat(carbonFootprint || countryValue.carbonFootprint) * 1000).toFixed()).toLocaleString() + \" kilograms\")} of carbon dioxide equivalent gasses to the atmosphere every year.</h3>\n\n        {(zipCodeValue === null) && <p>Source: <a href=\"https://databank.worldbank.org/reports.aspx?source=2&series=EN.ATM.CO2E.PC&country=#\" target=\"_blank\" rel=\"noopener noreferrer\">DataBank</a>, World Bank, 2014.</p>}\n        {zipCodeValue && <p>Source: <a href=\"http://coolclimate.berkeley.edu/maps\" target=\"_blank\" rel=\"noopener noreferrer\">CoolClimate Maps</a>, U.C. Berkeley CoolClimate Network, 2013.</p>}\n\n\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport Navigation from '../layout/Navigation';\nimport { Link } from 'react-router-dom';\n\nimport '../../App.css';\nimport logo from '../../reversible-logo.svg';\nimport wordmark from '../../wordmark.svg';\n\nimport ReactGA from 'react-ga';\n\nclass SourceLibrary extends Component {\n  render() {\n    ReactGA.initialize('UA-148187805-1');\n    ReactGA.pageview('/source-library');\n    return (\n      <div className=\"SourceLibrary\">\n\n      <Navigation />\n        <div className=\"main-section\">\n\n          <div className=\"section -paragraph\">\n          <div className=\"logo-section\">\n          <Link to=\"/\"><img src={logo} alt=\"The Reversible logo, a small blue dot\" id=\"logo\" />\n          <img src={wordmark} alt=\"The Reversible wordmark\" id=\"wordmark\" /></Link>\n          </div>\n            <h1>Source Library</h1>\n            <p>Reversible is making open source software products to facilitate the removal of carbon dioxide from the atmosphere and reverse climate change.</p>\n            <p>We publish all our source code here for free community use.</p>\n          </div>\n\n          <div className=\"section -paragraph\">\n            <h2>Browse the library</h2>\n              <ul>\n              <li>\n                <a href=\"https://github.com/reversiblecc/reversible/blob/master/src/components/pages/Calculator.js\">Carbon Calculator source</a>\n              </li>\n              <li>\n                <a href=\"https://github.com/reversiblecc/reversible\">Reversible website source</a>\n              </li>\n\n\n              </ul>\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default SourceLibrary;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch } from 'react-router-dom';\nimport ScrollToTop from 'react-router-scroll-top'\n\nimport Home from './components/pages/Home';\nimport Calculator from './components/pages/Calculator';\nimport SourceLibrary from './components/pages/SourceLibrary';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <ScrollToTop>\n          <div>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/calculator' component={Calculator} />\n              <Route path='/source-library' component={SourceLibrary} />\n              <Route component={Home} />\n            </Switch>\n          </div>\n          </ScrollToTop>\n        </Router>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}